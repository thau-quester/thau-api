name: Thau API

on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Test Thau API
      run: |
        MVN_VERSION=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        if [[ "$MVN_VERSION" == *"-SNAPSHOT" ]]; then
          >&2 echo "Project version is SNAPSHOT!" 
          exit 1
        fi

        ./mvnw -q clean verify

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Setup gcloud
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: quester-263306
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: info
    - name: Build and Push the Docker image
      run: |
        ./mvnw -q package -Dmaven.test.skip=true

        MVN_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)

        echo "LOGIN TO DOCKER HUB"
        docker login -u mgrin -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        echo "BUILDING AND PUSHING THE IMAGE"
        docker build --tag mgrin/thau:${MVN_VERSION} .
        docker push mgrin/thau:${MVN_VERSION}

        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" | base64 --decode > key.json

        gcloud auth activate-service-account --key-file=key.json
        gsutil cp target/thau-${MVN_VERSION}.jar gs://thau/packages/thau-${MVN_VERSION}.jar
        
        if [[ "$MVN_VERSION" != *"-BETA" ]]; then
          docker tag mgrin/thau:${MVN_VERSION} mgrin/thau:latest
          docker push mgrin/thau:latest
          gsutil cp target/thau-${MVN_VERSION}.jar gs://thau/packages/thau-latest.jar

          echo "${{ secrets.SSH_KEY_THAU_DEV }}" | base64 --decode > .github-ci
          chmod 600 .github-ci
          ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" -i .github-ci grishin_nikita_gmail_com@thau.quester-app.dev "cd thau-api && ./deploy.sh"
        fi
